// Generated by Dagger (https://dagger.dev).
package com.example.basemvvm.ui.signup;

import com.example.basemvvm.data.repository.ApiRepository;
import com.example.basemvvm.ui.base.BaseViewModel_MembersInjector;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SignupViewModel_Factory implements Factory<SignupViewModel> {
  private final Provider<ApiRepository> apiRepositoryProvider;

  public SignupViewModel_Factory(Provider<ApiRepository> apiRepositoryProvider) {
    this.apiRepositoryProvider = apiRepositoryProvider;
  }

  @Override
  public SignupViewModel get() {
    SignupViewModel instance = newInstance();
    BaseViewModel_MembersInjector.injectApiRepository(instance, apiRepositoryProvider.get());
    return instance;
  }

  public static SignupViewModel_Factory create(Provider<ApiRepository> apiRepositoryProvider) {
    return new SignupViewModel_Factory(apiRepositoryProvider);
  }

  public static SignupViewModel newInstance() {
    return new SignupViewModel();
  }
}
